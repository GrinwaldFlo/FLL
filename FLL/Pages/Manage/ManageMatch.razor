@inherits BasePage
@page "/manage/match"
@page "/manage/match/{ContestName}/{GUID}"
@using FLL.Data.Models;


@if (contest == null)
{
    <div class="alert alert-danger">
        No contest created
    </div>

    return;
}


@if (!contest.Rounds.Any())
{
    <div class="alert alert-danger">
        No rounds found
    </div>
    return;
}
<i>Based on the time, automatically show the current team and table</i>
<RadzenLink Text="Open table in new tab" Target="_blank" Path=@(GetPath("Table")) class="my-auto mx-1" />
<RadzenLink Text="Open team 1 in new tab" Target="_blank" Path=@(GetPath("Team1")) class="my-auto mx-1" />
<RadzenLink Text="Open team 2 in new tab" Target="_blank" Path=@(GetPath("Team2")) class="my-auto mx-1" />

<RadzenDataList AllowPaging=false Data="@contest.Rounds.OrderBy(x => x.RoundId)" TItem="RoundItem">
    <Template Context="item">
        <RadzenCard Style="width: 100%; padding: 0;">
            <div class="d-flex flex-row">
                <RadzenText TextStyle="TextStyle.H3">@item.RoundId - @item.Name</RadzenText>
                <div class="my-auto mx-5">
                    <RadzenLink Target="_blank" Text="Open view in new tab" Path=@GetPath(item) />
                </div>

                <RadzenDatePicker class="my-auto" Style="width:110px" Value="item.StartTime" TValue=DateTime Change="@(args => ChangeTime(item, args))" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" />

                <RadzenText class="my-auto ms-3 me-1" TextStyle="TextStyle.Caption">Time between match</RadzenText>
                <RadzenNumeric class="my-auto" Style="width:100px" Value="item.MinBtwMatch" TValue="double" Min="1" Max="100" Change="@(args => ChangeMinBtwMatch(item, args))" />
            </div>
            <table class="table table-striped bg-white">
                <thead>
                    <tr>
                        <th scope="col">Time</th>
                        <th scope="col">Table</th>
                        <th scope="col">Team 1</th>
                        <th scope="col">Team 2</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var match in item.Matchs.OrderBy(x => x.StartTime))
                    {
                        <tr>
                            <th scope="row">
                                <RadzenDatePicker Value="match.StartTime" Style="width:110px" TValue=DateTime Change="@(args => ChangeTime(item, match, args) )" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" />
                            </th>
                            <td>
                                <RadzenDropDown TValue="TableItem" Value=@match.Table Data=@contest.Tables.OrderBy(x => x.TableId) Change="@(args => ChangeTable(match, args) )" Style="width:200px" />
                            </td>
                            <td>
                                <RadzenDropDown TValue="TeamItem" AllowClear=true Value=@match.Team1 Data=@contest.Teams.OrderBy(x => x.TeamId) Change="@(args => ChangeTeam1(match, args) )" Style="width:100%" AllowFiltering=true FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" />
                            </td>
                            <td>
                                <RadzenDropDown TValue="TeamItem" AllowClear=true Value=@match.Team2 Data=@contest.Teams.OrderBy(x => x.TeamId) Change="@(args => ChangeTeam2(match, args) )" Style="width:100%" AllowFiltering=true FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </RadzenCard>
    </Template>
</RadzenDataList>
